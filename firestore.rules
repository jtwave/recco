rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }
    
    // Recommendations collection rules
    match /recommendations/{recommendationId} {
      // Anyone can read recommendations
      allow read: if isAuthenticated();
      
      // Only authenticated users can create recommendations
      allow create: if isAuthenticated() && 
                      request.resource.data.fromUserId == request.auth.uid &&
                      request.resource.data.createdAt is timestamp;
      
      // Only the creator can update or delete their recommendations
      allow update: if isAuthenticated() && 
                      resource.data.fromUserId == request.auth.uid;
      allow delete: if isAuthenticated() && 
                      resource.data.fromUserId == request.auth.uid;
    }
  }
} 